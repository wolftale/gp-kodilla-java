CREATE TABLE BOOKS_AUD (
                           BOOK_ID int(11) NOT NULL,
                           TITLE varchar(255) NOT NULL,
                           PUBYEAR int(4) NOT NULL,
                           AUDIT_TIME datetime NOT NULL,
                           AUDIT_ACTION varchar(10) NOT NULL,
                           AUDIT_USER varchar(255) NOT NULL
);

CREATE TABLE READERS_AUD (
                             READER_ID int(11) NOT NULL,
                             FIRSTNAME varchar(255) NOT NULL,
                             LASTNAME varchar(255) NOT NULL,
                             PESELID varchar(11) NOT NULL,
                             AUDIT_TIME datetime NOT NULL,
                             AUDIT_ACTION varchar(10) NOT NULL,
                             AUDIT_USER varchar(255) NOT NULL
);

-- Wyzwalacze dla tabeli BOOKS
DELIMITER $$
CREATE TRIGGER books_after_insert
    AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (BOOK_ID, TITLE, PUBYEAR, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NOW(), 'INSERT', USER());
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER books_after_update
    AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (BOOK_ID, TITLE, PUBYEAR, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NOW(), 'UPDATE', USER());
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER books_after_delete
    AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (BOOK_ID, TITLE, PUBYEAR, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, NOW(), 'DELETE', USER());
END $$
DELIMITER ;


-- Wyzwalacze dla tabeli BOOKS
DELIMITER $$
CREATE TRIGGER readers_after_insert
    AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (READER_ID, FIRSTNAME, LASTNAME, PESELID, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NOW(), 'INSERT', USER());
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER readers_after_update
    AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (READER_ID, FIRSTNAME, LASTNAME, PESELID, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NOW(), 'UPDATE', USER());
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER readers_after_delete
    AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (READER_ID, FIRSTNAME, LASTNAME, PESELID, AUDIT_TIME, AUDIT_ACTION, AUDIT_USER)
    VALUES (OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, NOW(), 'DELETE', USER());
END $$
DELIMITER ;
